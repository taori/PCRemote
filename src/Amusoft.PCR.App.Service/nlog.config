<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-PCR2-Web.txt">
	<variable name="loggerFormatted" value="${pad:padding=80:inner=${logger}}"/>
	<variable name="timestamp" value="${date:HH\:mm\:ss.fff}"/>

	<variable name="commonLogRoot" value="${basedir}../logs"/>
	<variable name="logRoot" value="${commonLogRoot}/web/"/>
	<variable name="archiveRoot" value="${commonLogRoot}/web/archive/"/>
	<variable name="logLayoutLong" value="${longdate} ${pad:padding=5:inner=${level:uppercase=true}}|${loggerFormatted} | ${message} ${exception:format=tostring}"/>
	<variable name="logLayoutShort" value="${logger}${timestamp} ${pad:padding=5:inner=${level:uppercase=true}} ${message}"/>

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="fileLowDetail"
		        createDirs="true"
		        archiveEvery="Day" archiveNumbering="Rolling" archiveFileName="${archiveRoot}min-detail.{##}.log" maxArchiveFiles="3"
		        autoFlush="true" enableFileDelete="true" encoding="utf-8"
		        fileName="${logRoot}min-detail-web.log"
				layout="${logLayoutLong}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<!-- <target xsi:type="File" name="fileMaxDetail"  -->
		<!--         createDirs="true" -->
		<!--         archiveEvery="Day" archiveNumbering="Rolling" archiveFileName="${archiveRoot}full-detail.{##}.log" maxArchiveFiles="3" -->
		<!--         autoFlush="true" enableFileDelete="true" encoding="utf-8" -->
		<!--         fileName="${logRoot}full-detail-${shortdate}.log" -->
		<!-- 		layout="${longdate} ${pad:padding=5:inner=${level:uppercase=true}}|${event-properties:item=EventId_Id:whenEmpty=0}|${loggerFormatted}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|" /> -->


		<target name="coloredConsole" xsi:type="ColoredConsole" useDefaultRowHighlightingRules="false"
		        layout="${logLayoutShort}" >
			<highlight-row condition="level == LogLevel.Trace" foregroundColor="DarkGray" />
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
			<highlight-row condition="level == LogLevel.Info" foregroundColor="Gray" />
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
			<highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
			<highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
			<highlight-word regex="\[[^]]+\]" foregroundColor="DarkYellow" compileRegex="true" />
			<highlight-word regex="\([^)]+\)" foregroundColor="Cyan" compileRegex="true" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>

		<!-- filter logs -->
		<logger name="Microsoft.AspNetCore.*" maxlevel="Info" final="true" />
		<logger name="Microsoft.Extensions.*" maxlevel="Info" final="true" />
		<logger name="Microsoft.EntityFrameworkCore.*" maxlevel="Info" final="true" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="coloredConsole,fileLowDetail" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" writeTo="coloredConsole,fileLowDetail" final="true" />
		<!-- BlackHole -->

		<logger name="*" minlevel="Debug" writeTo="fileLowDetail" />
	</rules>
</nlog>